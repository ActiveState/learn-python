# Python application example with ActiveState Platform

trigger:
- activestate-platform-and-state-tool-setup
jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: sh <(curl -q https://platform.activestate.com/dl/cli/install.sh) -n
    displayName: 'Install State Tool'
  - script: state deploy shnewto/learn-python
    displayName: 'Deploy project'
  - script: pylint src
    displayName: 'Lint with pylint'
  - script: flake8 src --statistics --count
    displayName: 'Lint with flake8'
  - script: pytest
    displayName: 'Test with pytest'
- job: macOS
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: sh <(curl -q https://platform.activestate.com/dl/cli/install.sh) -n
    displayName: 'Install State Tool'
  - script: state deploy MyOrg/learn-python
    displayName: 'Deploy project'
  - script: echo $PATH
    displayName: 'Lint with pylint'
  - script: flake8 src --statistics --count
    displayName: 'Lint with flake8'
  - script: pytest
    displayName: 'Test with pytest'
#  - script: state pull
#    displayName: 'Update project'
#  - script: |
#      state run lints
#      state run tests
#    displayName: 'Activate project and run tests'
- job: Windows
  pool:
    vmImage: 'windows-latest'
  steps:
  - powershell: | 
      (New-Object Net.WebClient).DownloadFile('https://platform.activestate.com/dl/cli/install.ps1', 'install.ps1')
      Invoke-Expression -Command "$env:PIPELINE_WORKSPACE\install.ps1 -n -t $env:AGENT_TOOLSDIRECTORY/state" 
      Write-Host "##vso[task.prependpath]$env:AGENT_TOOLSDIRECTORY\state"
    workingDirectory: $(Pipeline.Workspace)
    displayName: 'Install State Tool'
  - script: state deploy MyOrg/learn-python
    displayName: 'Deploy project'
  - script: pylint src
    displayName: 'Lint with pylint'
  - script: flake8 src --statistics --count
    displayName: 'Lint with flake8'
  - script: pytest
    displayName: 'Test with pytest'